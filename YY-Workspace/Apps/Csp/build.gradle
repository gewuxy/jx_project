apply plugin: 'com.android.application'
apply plugin: 'com.getkeepsafe.dexcount'

android {
    compileSdkVersion versions.compileSdk
    buildToolsVersion versions.buildTools

    defaultConfig {
        applicationId "jx.csp.app"

        minSdkVersion versions.minSdk
        targetSdkVersion versions.compileSdk

        versionCode 1
        versionName "0.1"

        multiDexEnabled true

        javaCompileOptions {
            annotationProcessorOptions {
                includeCompileClasspath = true
            }
        }

        flavorDimensions configs.dimension

        proguardFiles getDefaultProguardFile('proguard-android.txt'),
                // LibYS里的混淆, 相对路径为3级
                '../../../Android/Libs/LibYS_Rx/proguard-ys.pro',
                '../../../Android/Libs/LibYS_Rx/proguard-fresco.pro',
                '../../../Android/Libs/LibYS_Rx/proguard-lambda.pro',

                '../../../Android/Libs/LibNetwork_Rx/proguard-network.pro',
                '../../../Android/DI-compiler/proguard-injection.pro',
                '../../../Android/Libs/LibBD/proguard-baidu.pro',

                // YaYa-Libs 里的混淆, 相对路径为2级
                '../../Libs/LibJG/proguard-jg.pro',
                '../../Libs/LibPlayer/proguard-player.pro',
                '../../Libs/LibWX/proguard-wx.pro',
                '../../Libs/LibZEGO/proguard-zego.pro',
                // 本身的混淆
                'proguard-rules.pro'
    }

    signingConfigs {
        release {
            keyAlias 'jx'
            keyPassword '123456'
            storeFile file('./jx.keystore')
            storePassword '123456'
        }
    }

    buildTypes {
        debug {
            buildConfigField "boolean", "DEBUG_LOG", "true"
            buildConfigField "boolean", "DEBUG_NETWORK", "true"
            buildConfigField "boolean", "SWIPE_BACK_ENABLE", "true"
            buildConfigField "boolean", "TEST", "true"

            signingConfig signingConfigs.release

            shrinkResources false
            zipAlignEnabled false
            minifyEnabled false

            ndk {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
            }
        }
        alpha {
            buildConfigField "boolean", "DEBUG_LOG", "true"
            buildConfigField "boolean", "DEBUG_NETWORK", "true"
            buildConfigField "boolean", "SWIPE_BACK_ENABLE", "false"
            buildConfigField "boolean", "TEST", "false"

            signingConfig signingConfigs.release

            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true

            ndk {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a", "x86"
            }
        }
        release {
            buildConfigField "boolean", "DEBUG_LOG", "false"
            buildConfigField "boolean", "DEBUG_NETWORK", "false"
            buildConfigField "boolean", "SWIPE_BACK_ENABLE", "false"
            buildConfigField "boolean", "TEST", "false"

            signingConfig signingConfigs.release

            shrinkResources true
            zipAlignEnabled true
            minifyEnabled true

            ndk {
                abiFilters "armeabi", "armeabi-v7a", "arm64-v8a"
            }
        }
    }

    productFlavors {
        flavors_debug {
            manifestPlaceholders = [
                    app_name: "CSP(B)",
                    language: "cn",
            ]
        }
        flavors_alpha {
            manifestPlaceholders = [
                    app_name: "CSP(A)",
                    language: "cn",
            ]
        }
        flavors_release {
            manifestPlaceholders = [
                    app_name: "CSP",
                    language: "cn",
            ]
        }
        flavors_release_en {
            manifestPlaceholders = [
                    app_name: "CSP(EN)",
                    language: "en",
            ]
        }
    }

    //在生成的apk文件，修改下命名
    applicationVariants.all { variant ->
        variant.outputs.each { output ->
            def outputFile = output.outputFile
            if (outputFile != null && outputFile.name.endsWith('.apk')) {
                // 前段
                def fileName = outputFile.name.replace("Doctor", "${productFlavors.manifestPlaceholders.app_name}")
                // 中段
                fileName = fileName.replace("-flavors_debug", "")
                fileName = fileName.replace("-debug", "(test)")
                fileName = fileName.replace("-flavors_alpha", "")
                fileName = fileName.replace("-alpha", "(alpha)")
                fileName = fileName.replace("-flavors_release", "")
                fileName = fileName.replace("-release", "")
                // 尾端
                fileName = fileName.replace(".apk", "_v${defaultConfig.versionName}.apk")

//                output.outputFile = new File(outputFile.parent, fileName)
            }
        }
    }

    sourceSets {
        main.res.srcDirs += 'src/main/res-form'
    }

    lintOptions {
        abortOnError configs.abortOnError
    }

    compileOptions {
        sourceCompatibility versions.java
        targetCompatibility versions.java
    }

}

dependencies {
    implementation project(':YY-Workspace:Libs:LibYY')
    implementation project(':YY-Workspace:Libs:LibPay')
    implementation (project(':YY-Workspace:Libs:LibJG')) {
//        exclude
//        exclude(group: 'jshare-sina-android-v1.0.0', module: 'com.sina')
    }
    implementation project(':YY-Workspace:Libs:LibWX')
    implementation project(':YY-Workspace:Libs:LibZEGO')
    implementation project(':YY-Workspace:Libs:LibMob')
    /**
     * other
     */
    implementation 'com.mylhyl:zxingscanner:1.5.1'
    /**
     * leakcanary
     */
    //    debugCompile deps.debug.leakcanary
    //    releaseCompile deps.release.leakcanary
    implementation deps.support.dex
    annotationProcessor project(deps.ys.compiler)
    implementation deps.support.gridlayout
}